plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'de.mannodermaus.android-junit5'
}

android {
    compileSdk 31
    buildToolsVersion = "32.0.0"
    defaultConfig {
        applicationId "com.sburov.aboutweather"
        minSdk 29
        targetSdk 29
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "API_KEY", getApiKey('local.properties')['API_KEY_PROD'])
        buildConfigField("String", "API_KEY_TEST", getApiKey('local.properties')['API_KEY_TEST'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-location:20.0.0'

    implementation "io.arrow-kt:arrow-core:$arrow_version"

    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.3.2"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3'

    // ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-jetty:$ktor_version"

    implementation "io.ktor:ktor-client-resources:$ktor_version"

    implementation "io.ktor:ktor-client-logging:$ktor_version"

    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-xml:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-cbor:$ktor_version"

    implementation "androidx.activity:activity-ktx:$activity_version"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    androidTestImplementation "de.mannodermaus.junit5:android-instrumentation-test:0.2.2"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-instrumentation-test-runner:0.2.2"
    androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.3.0'
    androidTestRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.3.0'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Core library
    androidTestImplementation("androidx.test:core:$androidXTestVersion")
    // Kotlin extensions for androidx.test.core
    androidTestImplementation("androidx.test:core-ktx:$androidXTestVersion")

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation("androidx.test:runner:$testRunnerVersion")
    androidTestImplementation("androidx.test:rules:$testRulesVersion")

    // Assertions
    androidTestImplementation("androidx.test.ext:junit:$testJunitVersion")
    // Kotlin extensions for androidx.test.ext.junit
    androidTestImplementation("androidx.test.ext:junit-ktx:$testJunitVersion")
    androidTestImplementation("androidx.test.ext:truth:$truthVersion")

    androidTestImplementation("androidx.test:annotation:1.0.0")

    // Espresso dependencies
    androidTestImplementation( "androidx.test.espresso:espresso-core:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-contrib:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-intents:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-accessibility:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-web:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso.idling:idling-concurrent:$espressoVersion")

    // The following Espresso dependency can be either "implementation",
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK"s compile classpath or the test APK
    // classpath.
    androidTestImplementation( "androidx.test.espresso:espresso-idling-resource:$espressoVersion")
}

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'de.mannodermaus.android-junit5'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33
    buildToolsVersion = "33.0.0"
    defaultConfig {
        applicationId "com.sburov.aboutweather"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "API_KEY", getApiKey('local.properties')['API_KEY_PROD'])
        buildConfigField("String", "API_KEY_TEST", getApiKey('local.properties')['API_KEY_TEST'])

        // 1) Make sure to use the AndroidJUnitRunner, or a subclass of it. This requires a dependency on androidx.test:runner, too!
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        // 2) Connect JUnit 5 to the runner
        testInstrumentationRunnerArguments["runnerBuilder"] = "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    namespace 'com.sburov.aboutweather'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    implementation "androidx.activity:activity-compose:$activity_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.40.5"
    kapt "com.google.dagger:hilt-android-compiler:2.40.5"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Functional programming library
    implementation "io.arrow-kt:arrow-core:$arrow_version"

    // Kotlin + coroutines
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.3"

    // Location Services
    implementation 'com.google.android.gms:play-services-location:20.0.0'

    // ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-jetty:$ktor_version"

    implementation "io.ktor:ktor-client-resources:$ktor_version"

    implementation "io.ktor:ktor-client-logging:$ktor_version"

    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-xml:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-cbor:$ktor_version"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.3.0'
    androidTestRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.3.0'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Core library
    androidTestImplementation "androidx.compose.ui:ui-test-junit5:$compose_version"
    androidTestImplementation("androidx.test:annotation:1.0.0")
    androidTestImplementation("androidx.test:core:$androidXTestVersion")
    androidTestImplementation("androidx.test:core-ktx:$androidXTestVersion")
    androidTestImplementation("androidx.test:runner:$testRunnerVersion")
    androidTestImplementation("androidx.test:rules:$testRulesVersion")
    androidTestImplementation("androidx.test.ext:junit:$testJunitVersion")
    androidTestImplementation("androidx.test.ext:junit-ktx:$testJunitVersion")
    androidTestImplementation("androidx.test.ext:truth:$truthVersion")

    // Espresso dependencies
    androidTestImplementation( "androidx.test.espresso:espresso-core:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-contrib:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-intents:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-accessibility:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso:espresso-web:$espressoVersion")
    androidTestImplementation( "androidx.test.espresso.idling:idling-concurrent:$espressoVersion")

    // The following Espresso dependency can be either "implementation",
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK"s compile classpath or the test APK
    // classpath.
    androidTestImplementation( "androidx.test.espresso:espresso-idling-resource:$espressoVersion")

    testRuntimeOnly "ch.qos.logback:logback-classic:1.2.5"
}
